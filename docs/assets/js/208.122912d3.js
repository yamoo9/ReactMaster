(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{457:function(s,t,a){"use strict";a.r(t);var n=a(12),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"네트워크-요청-응답-💰"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#네트워크-요청-응답-💰"}},[s._v("#")]),s._v(" 네트워크 요청/응답 💰")]),s._v(" "),a("p",[s._v("네트워크 요청은 애플리케이션에서 빈번하게 수행되는 대표적인 "),a("a",{attrs:{href:"https://ko.wikipedia.org/wiki/%EB%B6%80%EC%9E%91%EC%9A%A9_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)",target:"_blank",rel:"noopener noreferrer"}},[s._v("사이드 이펙트(Side Effects)"),a("OutboundLink")],1),s._v("입니다.\n렌더링 된 DOM에 적용하거나, "),a("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/API/Window/localStorage",target:"_blank",rel:"noopener noreferrer"}},[s._v("로컬 스토리지(Local Storage)"),a("OutboundLink")],1),s._v("와 같은 Browser API와 인터랙션 할 때 적용됩니다.")]),s._v(" "),a("p",[s._v("이러한 사이드 이펙트는 모두 "),a("code",[s._v("React.useEffect()")]),s._v(" 훅에 설정된 콜백 함수 안에서 실행됩니다. 이 훅을 사용하면 변경 사항이 발생할 때마다 해당 변경 사항을 기반으로 사이드 이펙트를 적용 할 수 있습니다.\n그리고 "),a("code",[s._v("React.useEffect()")]),s._v(" 훅은 클린업(Cleanup) 함수 외에 다른 결과를 반환할 수 없다는 점에 유의해야 합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 이렇게 작성하면 제대로 작동하지 않습니다.")]),s._v("\nReact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("위 코드가 정상적으로 작동하지 않는 이유는 비동기(Async) 함수를 사용하면 프로미스(Promise) 객체를 반환하기 때문입니다.\n그러므로 문제 없이 비동기 함수를 사용할 경우 다음과 같이 사용해야 합니다. 이렇게 작성해야 클린업 함수 외에 아무 것도 반환하지 않으므로 문제를 발생시키지 않습니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[s._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("또는 비동기 함수 대신, "),a("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("프로미스(Promise)"),a("OutboundLink")],1),s._v("를 사용할 수도 있고, 보다 쉽습니다.\n하지만 비동기 함수를 사용할 지, 프로미스를 사용할 지는 전적으로 사용자의 선택입니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[s._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"실습"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#실습"}},[s._v("#")]),s._v(" 실습")]),s._v(" "),a("p",[s._v("컴포넌트의 "),a("code",[s._v("React.useEffect()")]),s._v(" 훅에 설정된 콜백 함수에서 네트워크 요청으로 데이터를 가져 오는 실습을 진행합니다.\n실습 예제는 사용자가 포켓몬의 이름을 영어로 입력하면 해당 포켓몬의 데이터를 요청할 수 있는 폼입니다. 진행할 실습은 포켓몬 이름을 입력 받아 해당 값을 전달해 네티워크 요청하는 컴포넌트를 구성하는 것입니다.\n입력된 포켓몬 이름은 PokemonInfo 컴포넌트에 "),a("code",[s._v("pokemonName")]),s._v(" 속성으로 전달되어 UI를 다시 렌더링 합니다.")]),s._v(" "),a("base-img",{attrs:{src:"pokemon.png"}}),s._v(" "),a("h3",{attrs:{id:"포켓몬-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#포켓몬-api"}},[s._v("#")]),s._v(" 포켓몬 API")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://wayfair.github.io/dociql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pokémon API"),a("OutboundLink")],1),s._v("는 GraphQL API입니다. 인트로스펙션(introspection) 쿼리(query)를 사용해 스키마(schema)를 가져올 수 있으며 코드, 문서, 테스트 등을 생성하는 데 사용할 수 있습니다. "),a("a",{attrs:{href:"https://graphql.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GraphQL"),a("OutboundLink")],1),s._v("은 API용 쿼리 언어이며 쿼리를 사용해 데이터를 처리하는 런타임입니다.")]),s._v(" "),a("iframe-wrapper",{attrs:{src:"https://graphql-pokemon2.vercel.app/"}}),s._v(" "),a("base-img",{staticStyle:{width:"400px",margin:"50px auto"},attrs:{src:"pokemon-api-1.gif"}}),s._v(" "),a("h2",{attrs:{id:"추가-실습"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추가-실습"}},[s._v("#")]),s._v(" 추가 실습")]),s._v(" "),a("h3",{attrs:{id:"_1-오류-처리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-오류-처리"}},[s._v("#")]),s._v(" 1. 오류 처리")]),s._v(" "),a("p",[s._v("문제가 발생한 경우, 사용자에게 문제 원인을 안내할 수 있어야 합니다. 해당 오류를 처리하고 다음과 같이 렌더링 될 수 있도록 실습을 진행합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  [오류발생] ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("pre")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("style")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("whiteSpace"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'normal'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("pre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("base-img",{staticStyle:{width:"400px",margin:"50px auto"},attrs:{src:"pokemon-api-2.gif"}}),s._v(" "),a("p",[s._v('예를 들어 잘못된 "포켓몬 이름"을 사용자가 입력하면 오류가 발생합니다. 네트워크 요청에 대한 응답으로 오류가 발생한 경우 프로미스(Promise)에서 어떤 방법으로 오류를 처리해야 하는 지 다음의 방법 중 하나를 선택해 사용할 수 있습니다.\n각 방법은 목적에 도달하는 기능으로서는 동일한 역할을 하지만, 의미 상으로 다소 다릅니다.')]),s._v(" "),a("p",[a("strong",[s._v(".catch() 메서드")])]),s._v(" "),a("p",[s._v("이 방법은 "),a("code",[s._v("fetchPokemon()")]),s._v("의 프로미스 객체의 오류를 처리할 수 있지만 콜백 함수로 설정된 "),a("code",[s._v("setPokemon()")]),s._v(" 호출에서의 오류도 캐치할 수 있습니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 방법 1: .catch() 메서드 활용")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetchPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemonName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("pokemon")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v(".then() 메서드의 2번째 전달 인자 (오류 처리 함수)")])]),s._v(" "),a("p",[s._v("이 방법은 "),a("code",[s._v(".then()")]),s._v(" 메서드에 전달되는 2번째 인자인 오류 처리 함수를 통해 "),a("code",[s._v("fetchPokemon()")]),s._v("에서 발생하는 오류만 캐치할 수 있습니다. 다시 말해 "),a("code",[s._v("setPokemon()")]),s._v("의 오류는 캐치할 수 없습니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 방법 2: .then() 메서드의 2번째 전달 인자")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetchPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemonName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 승인(resolve)")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("pokemon")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 거절(reject)")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("하지만 실습 예제에서는 결과적으로 큰 차이가 없으니 상황에 따라 적절한 방법을 취하시길 바랍니다. 다만, 안정적인 방법으로 오류를 캐치(catch) 하려면 "),a("code",[s._v(".catch()")]),s._v(" 사용이 권장됩니다.")]),s._v(" "),a("h3",{attrs:{id:"_2-네트워크-상태-별-렌더링"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-네트워크-상태-별-렌더링"}},[s._v("#")]),s._v(" 2. 네트워크 상태 별, 렌더링")]),s._v(" "),a("p",[s._v("컴포넌트에 명시적으로 상태(state)를 설정하고 관리하면 발생하는 상황(status)에 대처하기가 한결 수월해집니다.")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("오류("),a("code",[s._v("error")]),s._v(") 또는 로딩("),a("code",[s._v("loading")]),s._v(") 상태을 불리언(Boolean) 값으로 설정해 관리할 수도 있지만, 각 상황마다 문자 값으로 구분하여 처리하는 방법을 사용하면 보다 명확한 메시지 전달이 가능합니다.\n("),a("code",[s._v("idle")]),s._v(" / "),a("code",[s._v("pending")]),s._v(" / "),a("code",[s._v("resolved")]),s._v(" / "),a("code",[s._v("rejected")]),s._v(")")])]),s._v(" "),a("p",[s._v("예를 들어 네트워크 요청 및 응답 상황은 다음과 같습니다.")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("상황 (Status)")]),s._v(" "),a("th",[s._v("설명")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("idle")])]),s._v(" "),a("td",[s._v("아직 요청하지 않음")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("pending")])]),s._v(" "),a("td",[s._v("요청 시작")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("rejected")])]),s._v(" "),a("td",[s._v("요청 실패")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("resolved")])]),s._v(" "),a("td",[s._v("요청 성공")])])])]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PROMISE_STATUS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  idle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 전'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  pending"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 중...'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  resolved"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 성공'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  rejected"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 실패'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("각 상황(status)에 따라 결과 화면이 달리 렌더링 되도록 실습을 진행합니다.")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-next-line default-case")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PROMISE_STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 전'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PROMISE_STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pending"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 중...'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PROMISE_STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rejected"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 실패'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PROMISE_STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("resolved"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'요청 성공'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("base-img",{attrs:{src:"pokemon-switch-case.png"}}),s._v(" "),a("h3",{attrs:{id:"_3-객체를-사용해-상태-관리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-객체를-사용해-상태-관리"}},[s._v("#")]),s._v(" 3. 객체를 사용해 상태 관리")]),s._v(" "),a("p",[s._v("앞서 진행한 실습 과정에서 다수의 상태 업데이트를 연속적으로 호출하고 있음을 알 수 있습니다. 이것이 일반적으로 문제가 되지 않지만, 상태 업데이트를 호출 할 때마다 컴포넌트가 다시 렌더링 될 수 있습니다.\nReact는 이러한 호출을 일괄적으로 처리하므로 1회만 다시 렌더링 하지만, 비동기 콜백에서는 그렇지 않습니다. (예: Promise 요청/응답)\n이러한 문제는 "),a("code",[s._v("setPokemon()")]),s._v("과 "),a("code",[s._v("setStatus()")]),s._v(" 상태 업데이트 순서를 뒤바꿔보면 확인할 수 있습니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'resolved'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// → 비동기 콜백 (다시 렌더링)")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 아래(↓)와 같이 순서를 뒤바꿔 실행해봅니다.")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'resolved'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// → 비동기 콜백 (다시 렌더링)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPokemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pokemon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("순서를 뒤 바꾼 후에는 이미지를 읽을 수 없다는 오류가 표시됩니다. 이유는 "),a("code",[s._v("setStatus()")]),s._v(" 호출이 먼저 일어나면 비동기 콜백으로 인해 다시 렌더링 되기 때문에 "),a("code",[s._v("setPokemon()")]),s._v(" 상태 업데이트에 문제가 발생하는 것이죠.")]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",[s._v("Uncaught TypeError: Cannot read property 'image' of null")])]),s._v(" "),a("p",[s._v("향후 "),a("code",[s._v("React.useReducer()")]),s._v(" 훅을 사용해 이 문제를 멋지게 해결하는 방법을 배우게 될 것입니다. 하지만 현재 실습에서는  모든 상태 속성을 포함하는 단 하나의 객체를 상태로 설정해 이 문제를 해결할 수 있습니다.\n상태를 다음과 같이 업데이트 할 수 있도록 단 하나의 "),a("code",[s._v("Retact.useState()")]),s._v(" 훅을 사용해 모든 상태를 관리하는 실습을 진행합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  status"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'resolved'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  pokemon"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" pokemonData\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_4-errorboundary-컴포넌트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-errorboundary-컴포넌트"}},[s._v("#")]),s._v(" 4. ErrorBoundary 컴포넌트")]),s._v(" "),a("p",[s._v("네트워크 요청 과정에서 발생할 수 있는 오류 문제는 해결 했으나, 1가지 오류만 처리하고 있습니다. 하지만 애플리케이션에는 다양한 종류의 오류가 발생할 수 있습니다. 코드가 예상대로 작동되지 않을 경우, 문제에 대해 안내해야 합니다. 오류가 발생하거나 처리되지 않으면 애플리케이션이 페이지에서 제거되어 사용자에게 빈 화면이 남겨지기 때문입니다.")]),s._v(" "),a("p",[a("strong",[s._v("오류 확인")])]),s._v(" "),a("p",[s._v("<PokemonDataView> 컴포넌트의 pokemon 속성 값을 null로 설정하면 오류가 발생하고 빈 화면에 표시됩니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'resolved'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PokemonDataView")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("pokemon")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("해결 방안")])]),s._v(" "),a("p",[s._v("React는 "),a("a",{attrs:{href:"https://ko.reactjs.org/docs/error-boundaries.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("ErrorBoundary"),a("OutboundLink")],1),s._v("라는 특별한 컴포넌트를 사용해 애플리케이션의 오류를 처리하는 방법이 있습니다. (v16 등장)\n하지만 현재 함수 컴포넌트로는 만들 수 있는 방법이 없기에 대신 클래스 컴포넌트를 사용해야 합니다.")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",[a("code",[s._v("getDerivedStateFromError()")]),s._v(" 라이프 사이클 훅을 사용해야 하므로 클래스를 컴포넌트를 사용해야 합니다. 현재 함수 컴포넌트는 이를 지원하지 않습니다.\n그리고 ErrorBoundary 컴포넌트의 하위 컴포넌트 오류만 캐치할 수 있음에 유의해야 합니다.")])]),s._v(" "),a("p",[s._v("ErrorBoundary 컴포넌트를 만들어 PokemonInfo 컴포넌트의 오류를 확인하여 출력하는 실습을 진행합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Component")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDerivedStateFromError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... ")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("PokemonInfo 컴포넌트에서 오류가 발생하면 캐치할 수 있도록 ErrorBoundary 컴포넌트로 래핑합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PokemonInfo")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("pokemonName")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pokemonName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("네트워크 요청/응답 오류가 발생한 경우, 오류로 캐치할 수 있도록 'rejected' 케이스 코드에 다음과 같이 설정합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rejected'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" error\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("이어서 ErrorBoundary 컴포넌트 외부에서 렌더링 할 컴포넌트를  제어할 수 있도록 다음과 같이 설정해봅니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("FallbackComponent")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ErrorFallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("ErrorBoundary 컴포넌트에 대체 컴포넌트로 전달할 ErrorFallback 컴포넌트 또한 정의해봅니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ErrorFallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("모든 설정을 마무리하면, 오류가 발생했을 때` ErrorBoundary 컴포넌트에 의해 사용자에게 어떤 문제가 발생했는 지 표시합니다.")]),s._v(" "),a("base-img",{attrs:{src:"pokemon-error.png"}}),s._v(" "),a("h3",{attrs:{id:"_5-errorboundary-다시-마운트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-errorboundary-다시-마운트"}},[s._v("#")]),s._v(" 5. ErrorBoundary 다시 마운트")]),s._v(" "),a("p",[s._v("이전 실습으로 오류를 캐치할 수 있게 되었지만, 오류가 발생한 후로 정상적으로 작동하지 않는 것을 확인 할 수 있습니다.")]),s._v(" "),a("ol",[a("li",[s._v('잘못된 "포켓몬 이름" 입력')]),s._v(" "),a("li",[s._v("ErrorBoundary에 의해 UI에 오류 출력")]),s._v(" "),a("li",[s._v('올바른 "포켓몬 이름" 입력')]),s._v(" "),a("li",[s._v("정상적으로 UI에 포켓몬 정보를 출력하지 못함")])]),s._v(" "),a("base-img",{staticStyle:{"margin-bottom":"30px"},attrs:{src:"pokemon-error2.png"}}),s._v(" "),a("p",[s._v("이러한 문제가 발생하는 이유는 "),a("strong",[s._v("ErrorBoundary 컴포넌트 내부의 "),a("code",[s._v("error")]),s._v(" 상태는 1번 변경된 이후, 다시 변경되지 않기 때문입니다.")]),s._v(" 그러므로 UI는 ErrorBoundary에 의해 오류를 출력한 상태에서 멈추는 것입니다.\n이 문제를 해결하기 위해서는 ErrorBoundary 컴포넌트의 "),a("code",[s._v("error")]),s._v(" 상태를 상위 컴포넌트가 다시 렌더링 될 때 초기 상태인 "),a("code",[s._v("null")]),s._v("로 재설정 해야 합니다. 하지만 외부에서 ErrorBoundary의 "),a("code",[s._v("error")]),s._v(" 상태에 어떻게 접근해야 할까요?")]),s._v(" "),a("p",[s._v("여러 방법이 있지만, 가장 간단한 방법은 "),a("code",[s._v("key")]),s._v(" 속성을 ErrorBoundary 컴포넌트에 설정하는 것입니다. "),a("code",[s._v("key")]),s._v(" 속성이 설정된 React 컴포넌트는 마운트 해제(unmount) 후, 다시 마운트(mount) 되기 때문에  "),a("code",[s._v("error")]),s._v(" 상태가 초기화 됩니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pokemonName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("FallbackComponent")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ErrorFallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-react-error-boundary-활용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-react-error-boundary-활용"}},[s._v("#")]),s._v(" 6. react-error-boundary 활용")]),s._v(" "),a("p",[s._v("실습 과정에서 만든 ErrorBoundary는 멋지게 작동하지만, 직접 ErrorBoundary 컴포넌트 대신 "),a("a",{attrs:{href:"https://www.npmjs.com/package/react-error-boundary",target:"_blank",rel:"noopener noreferrer"}},[s._v("react-error-boundary"),a("OutboundLink")],1),s._v(" 패키지를 설치해 활용할 수도 있습니다. 이 패키지는 이미 실습 자료에 설치되어 있습니다.\n이 패키지로부터 ErrorBoundary 모듈을 불러와 사용해봅니다. 실습 과정에서 만든 ErrorBoundary API와 동일하므로 오류 없이 바로 사용 가능합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ErrorBoundary "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react-error-boundary'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_7-errorboundary-리셋"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-errorboundary-리셋"}},[s._v("#")]),s._v(" 7. ErrorBoundary 리셋")]),s._v(" "),a("p",[s._v("ErrorBoundary 모듈은 보다 다양한 기능을 제공합니다. 추가적인 기능은 "),a("a",{attrs:{href:"https://www.npmjs.com/package/react-error-boundary#usage",target:"_blank",rel:"noopener noreferrer"}},[s._v("사용법"),a("OutboundLink")],1),s._v("을 확인한 후 활용해보세요.")]),s._v(" "),a("p",[a("strong",[s._v("🩴 ErrorFallback 컴포넌트의 props")])]),s._v(" "),a("p",[s._v("전달 받은 resetErrorBoundary 함수는 ErrorBoundary 상태를 초기화(reset) 합니다. 리셋 버튼을 ErrorFallback 컴포넌트 내부에 추가한 후 버튼을 클릭하면 ErrorBoundary 컴포넌트의 상태를 초기화 하도록 설정합니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ErrorFallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" resetErrorBoundary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("ErrorBoundary 컴포넌트에서 초기화 기능을 제공하므로 이전에 설정한 "),a("code",[s._v("key")]),s._v(" 속성은 제거합니다.")])]),s._v(" "),a("p",[a("strong",[s._v("🩴 ErrorBoundary 컴포넌트의 onReset 속성")])]),s._v(" "),a("p",[s._v("ErrorBoundary의 "),a("code",[s._v("onReset")]),s._v(" 속성은  컴포넌트 초기화 이벤트가 발생할 경우 감지하여 실행될 이벤트 핸들러를 설정합니다.\n"),a("code",[s._v("handleReset")]),s._v(" 핸들러를 정의한 후 ErrorBoundary 컴포넌트가 초기화 될 때 수행해야 할 일을 설정해보세요.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("onReset")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("handleReset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("FallbackComponent")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ErrorFallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("ErrorBoundary 컴포넌트가 리셋 될 때 수행할 일은 "),a("code",[s._v("pokemonName")]),s._v("을 초기화 하는 것입니다.")])]),s._v(" "),a("base-img",{staticStyle:{width:"400px",margin:"40px auto"},attrs:{src:"pokemon-error3.gif"}}),s._v(" "),a("h3",{attrs:{id:"_8-resetkeys-활용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-resetkeys-활용"}},[s._v("#")]),s._v(" 8. ResetKeys 활용")]),s._v(" "),a("p",[s._v("이전 실습에서 ErrorBoundary 컴포넌트의 리셋 기능을 활용함에 따라 "),a("code",[s._v("key")]),s._v(" 속성을 제거했습니다.\n리셋 버튼을 추가함에 따라 오류가 발생해도 초기화 할 수 있게 되었지만... 문제는 여전히 존재합니다. 다른 포켓몬 이름을 선택하거나, 입력해도 정상적으로 작동하지 않는 것이죠. 오직 리셋 버튼으로만 초기화 된 후 정상 작동하게 됩니다.")]),s._v(" "),a("base-img",{staticStyle:{width:"400px",margin:"40px auto"},attrs:{src:"pokemon-error4.gif"}}),s._v(" "),a("p",[s._v("다행히 이 문제를 해결할 수 있는 방법을 react-error-boundary 패키지는 제공합니다. ErrorBoundary 컴포넌트에 "),a("a",{attrs:{href:"https://www.npmjs.com/package/react-error-boundary#resetkeys",target:"_blank",rel:"noopener noreferrer"}},[s._v("resetKey"),a("OutboundLink")],1),s._v(" 속성을 추가한 후, 값으로 초기화 처리 할 상태를 포함하는 배열을 설정하면 상태가 변경 됨에 따라 ErrorBoundary 컴포넌트를 다시 렌더링 하게 됩니다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("resetKey")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pokemonName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("onReset")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("handleReset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("FallbackComponent")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ErrorFallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ErrorBoundary")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("base-img",{staticStyle:{width:"400px",margin:"40px auto"},attrs:{src:"pokemon-success.gif"}})],1)}),[],!1,null,null,null);t.default=r.exports}}]);